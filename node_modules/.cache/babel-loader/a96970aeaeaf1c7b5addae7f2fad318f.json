{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/asus/netflix-clone/Netflix-clone/src/components/Netflix/HomePage/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../../helper/axios\";\nimport \"../../../style/netflix/row.css\";\nimport Description from \"./Description\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [show, setShow] = useState(false);\n  const [issue, setIssue] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = movie => {\n    if (issue) {\n      setDetails([]);\n      setShow(false);\n      setIssue(false);\n    } else {\n      setDetails(movie);\n      setShow(true);\n      setIssue(true);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"filter-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-posters\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => handleClick(movie),\n          src: loading ? \"/images/misc/loading.gif\" : `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: movie.name,\n          className: `row-poster ${isLargeRow && \"row-posterLarge\"}`\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(Description, {\n      details: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"uxhjePxFUVmrD7uDwWpVz/Lrek8=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/home/asus/netflix-clone/Netflix-clone/src/components/Netflix/HomePage/Row.js"],"names":["React","useState","useEffect","axios","Description","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","details","setDetails","show","setShow","issue","setIssue","loading","setLoading","fetchData","request","get","data","results","handleClick","movie","setTimeout","map","poster_path","backdrop_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,gCAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,MAAMC,QAAQ,GAAG,sCAAjB;;AACA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAb,EAA8C;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUd,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACU,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GAPQ,EAON,CAACZ,QAAD,CAPM,CAAT;;AAQA,QAAMiB,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAIV,KAAJ,EAAW;AACTH,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAJD,MAIO;AACLJ,MAAAA,UAAU,CAACa,KAAD,CAAV;AACAX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAVD;;AAYAf,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAA8BZ;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGG,MAAM,CAACkB,GAAP,CAAYF,KAAD,IAAW;AACrB,4BACE;AAEE,UAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,KAAD,CAF5B;AAGE,UAAA,GAAG,EACDR,OAAO,GACH,0BADG,GAEF,GAAEb,QAAS,GACVI,UAAU,GAAGiB,KAAK,CAACG,WAAT,GAAuBH,KAAK,CAACI,aACxC,EART;AAUE,UAAA,GAAG,EAAEJ,KAAK,CAACK,IAVb;AAWE,UAAA,SAAS,EAAG,cAAatB,UAAU,IAAI,iBAAkB;AAX3D,WACOiB,KAAK,CAACM,EADb;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAhBA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAqBGlB,IAAI,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YArBX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA1DQN,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../../helper/axios\";\nimport \"../../../style/netflix/row.css\";\nimport Description from \"./Description\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [show, setShow] = useState(false);\n  const [issue, setIssue] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const handleClick = (movie) => {\n    if (issue) {\n      setDetails([]);\n      setShow(false);\n      setIssue(false);\n    } else {\n      setDetails(movie);\n      setShow(true);\n      setIssue(true);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"filter-title\">{title}</h2>\n      <div className=\"row-posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              src={\n                loading\n                  ? \"/images/misc/loading.gif\"\n                  : `${base_url}${\n                      isLargeRow ? movie.poster_path : movie.backdrop_path\n                    }`\n              }\n              alt={movie.name}\n              className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\n            />\n          );\n        })}\n      </div>\n      {show && <Description details={details} />}\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}