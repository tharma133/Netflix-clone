{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/asus/netflix-clone/src/components/Netflix/HomePage/Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../../../style/netflix/banner.css\";\nimport axios from \"../../../helper/axios\";\nimport requests from \"../../../helper/request\";\nimport { MdPlayArrow, MdAdd } from \"react-icons/md\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n    }\n\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  function sliceStr(str) {\n    if (str) {\n      return str.slice(0, 4);\n    }\n\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(${base_url}${movie === null || movie === void 0 ? void 0 : movie.backdrop_path})`,\n      backgroundPosition: \"center center\",\n      backgroundRepeat: \"no-repeat\",\n      objectFit: \"contain\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner-title\",\n        children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.vote_average ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rating\",\n            children: [movie.vote_average, \" ratings\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.first_air_date ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"year\",\n            children: sliceStr(movie.first_air_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner-description\",\n        children: truncate(movie === null || movie === void 0 ? void 0 : movie.overview, 150)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner-btn play\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-btn\",\n            children: /*#__PURE__*/_jsxDEV(MdPlayArrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" \", \"Play\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner-btn add\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-btn\",\n            children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), \" \", \"My List\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-fade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/home/asus/netflix-clone/src/components/Netflix/HomePage/Banner.js"],"names":["React","useState","useEffect","axios","requests","MdPlayArrow","MdAdd","base_url","Banner","movie","setMovie","fetchData","request","get","fetchNetflixOriginals","data","results","Math","floor","random","length","truncate","str","n","substr","sliceStr","slice","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","backgroundRepeat","objectFit","title","name","original_name","vote_average","first_air_date","overview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../../style/netflix/banner.css\";\nimport axios from \"../../../helper/axios\";\nimport requests from \"../../../helper/request\";\nimport { MdPlayArrow, MdAdd } from \"react-icons/md\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n  function sliceStr(str) {\n    if (str) {\n      return str.slice(0, 4);\n    }\n    return;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(${base_url}${movie?.backdrop_path})`,\n        backgroundPosition: \"center center\",\n        backgroundRepeat: \"no-repeat\",\n        objectFit: \"contain\",\n      }}\n    >\n      <div className=\"banner-content\">\n        <h1 className=\"banner-title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"movie-rating\">\n          <h3>\n            {movie.vote_average ? (\n              <span className=\"rating\">{movie.vote_average} ratings</span>\n            ) : (\n              \"\"\n            )}\n          </h3>\n          <h3>\n            {movie.first_air_date ? (\n              <span className=\"year\">{sliceStr(movie.first_air_date)}</span>\n            ) : (\n              \"\"\n            )}\n          </h3>\n        </div>\n        <h1 className=\"banner-description\">{truncate(movie?.overview, 150)}</h1>\n        <div className=\"banner-btns\">\n          <button className=\"banner-btn play\">\n            <span className=\"icon-btn\">\n              <MdPlayArrow />\n            </span>{\" \"}\n            Play\n          </button>\n          <button className=\"banner-btn add\">\n            <span className=\"icon-btn\">\n              <MdAdd />\n            </span>{\" \"}\n            My List\n          </button>\n        </div>\n      </div>\n      <div className=\"banner-fade\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}